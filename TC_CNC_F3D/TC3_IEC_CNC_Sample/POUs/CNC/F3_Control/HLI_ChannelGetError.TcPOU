<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="HLI_ChannelGetError" Id="{ec337ffb-e888-406b-a8e3-e87d9345f42d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION HLI_ChannelGetError : BOOL
VAR_INPUT
	nChan					: UDINT;			(* Number of channel *)
END_VAR
VAR
	nHliChIdx			: UDINT;
	pChannel				: POINTER TO ST_CncChannel;
	tmpErrorMask		: HLI_ERROR_MASKE;
	pErrorMask			: POINTER TO ARRAY [0..HLI_ERR_MASK_MAXIDX] OF BYTE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* ========================================================= *)
(*    FUN: HLI_ChannelGetError                               *)
(* --------------------------------------------------------- *)
(*   Desc: Gets the channel error                            *)
(* Return: The error flag of the channel                     *)
(* Author: MK                                                *)
(*   Date: 21.12.2011                                        *)
(*   Rev.: 1.0                                               *)
(* ========================================================= *)


nHliChIdx := nChan - 1;

IF nChan <= 0 OR gNrCh < nChan OR			(* check for channel no *)
	gpCh[nHliChIdx] = 0 THEN					(* check for zero pointer *)
	HLI_ChannelGetError := TRUE;
	RETURN; (* e x i t *)
END_IF


pChannel := ADR(CncSystem.Channel[nChan]);

(* Visualisation of Mode and State *)
pChannel^.ActMode := HLI_ChannelGetMode(nChan:=nChan);
pChannel^.ActState := HLI_ChannelGetState(nChan:=nChan);


(* Error messages id *)
IF pChannel^.ActState = HLI_IMCM_PROCESS_ERROR THEN
	pChannel^.Error := TRUE;
	pChannel^.ErrorId := gpCh[nHliChIdx]^.mc_error.satz_r.kopf.error_id;
	// MK check
	pChannel^.ErrorMask := gpCh[nHliChIdx]^.mc_error.satz_r.rumpf.maske;
	pErrorMask := ADR(pChannel^.ErrorMask);
	pErrorMask^ := gpCh[nHliChIdx]^.mc_error.satz_r.rumpf.maske.err_mask;
ELSE
	pChannel^.Error := FALSE;
	pChannel^.ErrorId := 0;
	pChannel^.ErrorMask := tmpErrorMask;
END_IF

(* Quit the error message *)
(*
IF gpCh[nHliChIdx]^.mc_error.semaphor_rw
	AND pChannel^.ActState = HLI_IMCM_PROCESS_ERROR
THEN
	pChannel^.ErrorMask := gpCh[nHliChIdx]^.mc_error.satz_r.rumpf.maske;
	gpCh[nHliChIdx]^.mc_error.semaphor_rw := FALSE;
	gpCh[nHliChIdx]^.mc_error.enable_w := FALSE;
END_IF
*)

HLI_ChannelGetError := pChannel^.Error;
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>